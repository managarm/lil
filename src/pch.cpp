#include <lil/imports.h>
#include <lil/intel.h>
#include <lil/pch.h>

#include "src/pch.hpp"

static uint16_t LPT_PCIIDS[] = {
	0x8C40, 0x8C41, 0x8C42, 0x8C43, 0x8C44, 0x8C45, 0x8C46, 0x8C47,
	0x8C48, 0x8C49, 0x8C4A, 0x8C4B, 0x8C4C, 0x8C4D, 0x8C4E, 0x8C4F,
	0x8C50, 0x8C51, 0x8C52, 0x8C53, 0x8C54, 0x8C55, 0x8C56, 0x8C57,
	0x8C58, 0x8C59, 0x8C5A, 0x8C5B, 0x8C5C, 0x8C5D, 0x8C5E, 0x8C5F,
	0x8CC1, 0x8CC2, 0x8CC3, 0x8CC4, 0x8CC5, 0x8CC6,
};

static uint16_t LPT_LP_PCIIDS[] = {
	0x9C40, 0x9C41, 0x9C43, 0x9C45, 0x9C47,
};

static uint16_t SPT_LP_PCIIDS[] = {
	0x9D40, 0x9D41, 0x9D42, 0x9D43, 0x9D44, 0x9D45, 0x9D46, 0x9D47,
	0x9D48, 0x9D4B, 0x9D4E, 0x9D50, 0x9D51, 0x9D52, 0x9D53, 0x9D56,
	0x9D58,
};

static uint16_t SPT_PCIIDS[] = {
	0xA140, 0xA141, 0xA142, 0xA143, 0xA144, 0xA145, 0xA146,
	0xA147, 0xA148, 0xA149, 0xA14A, 0xA14B, 0xA14C, 0xA14D,
	0xA14E, 0xA14F, 0xA150, 0xA151, 0xA152, 0xA153, 0xA154,
	0xA155,
};

static uint16_t KBP_PCIIDS[] = {
	0xA280, 0xA281, 0xA282, 0xA283, 0xA284, 0xA285, 0xA286,
	0xA287, 0xA288, 0xA289, 0xA28A, 0xA28B, 0xA28C, 0xA28D,
	0xA28E, 0xA28F, 0xA290, 0xA291, 0xA292, 0xA293, 0xA294,
	0xA295, 0xA296, 0xA297, 0xA298, 0xA2C0, 0xA2C1, 0xA2C3,
	0xA2C4, 0xA2C5, 0xA2C6, 0xA2C7, 0xA2C8, 0xA2CE, 0xA2CF,
	0xA2D2, 0xA2D3
};

static uint16_t WPT_PCIIDS[] = {
	0x9CC0, 0x9CC1, 0x9CC2, 0x9CC3, 0x9CC5, 0x9CC6, 0x9CC7, 0x9CC9,
	0x9CCB,
};

static bool in_pciid_list(uint16_t pci_id, uint16_t *list, size_t len) {
	for(size_t i = 0; i < (len / sizeof(*list)); i++)
		if(pci_id == list[i])
			return true;

	return false;
}

namespace pch {

void get_gen(LilGpu *gpu) {
	if(in_pciid_list(gpu->pch_dev, LPT_PCIIDS, sizeof(LPT_PCIIDS)))
		gpu->pch_gen = LPT;
	else if(in_pciid_list(gpu->pch_dev, LPT_LP_PCIIDS, sizeof(LPT_LP_PCIIDS)))
		gpu->pch_gen = LPT_LP;
	else if(in_pciid_list(gpu->pch_dev, SPT_LP_PCIIDS, sizeof(SPT_LP_PCIIDS)))
		gpu->pch_gen = SPT_LP;
	else if(in_pciid_list(gpu->pch_dev, SPT_PCIIDS, sizeof(SPT_PCIIDS)))
		gpu->pch_gen = SPT;
	else if(in_pciid_list(gpu->pch_dev, KBP_PCIIDS, sizeof(KBP_PCIIDS)))
		gpu->pch_gen = KBP;
	else if(in_pciid_list(gpu->pch_dev, WPT_PCIIDS, sizeof(WPT_PCIIDS)))
		gpu->pch_gen = WPT;
	else
		gpu->pch_gen = NO_PCH;
}

}
